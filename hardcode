from hub import light_matrix
from motor import velocity
import runloop
import motor_pair
from hub import port
import color_sensor
import distance_sensor
import color
import motor
import time
from hub import sound

#variables
score = 0
detection_count = 0
motor_pair.pair(motor_pair.PAIR_1, port.C, port.D)
was_on_green = False

async def main():
    global score, was_on_green, detection_count
    motor_pair.move_for_time(motor_pair.PAIR_1, 4800, 0, velocity=360)
    if color_sensor.color(port.B) == color.GREEN: #needs adjustment, this is for green square counter
            if not was_on_green:
                score += 1
                light_matrix.write(str(score))
                was_on_green = True
                motor_pair.move(motor_pair.PAIR_1, -75) #keeps moving after it senses green
                #stops after sensing a certain amount of green squares
                if score == 11:
                    light_matrix.clear()
                    motor_pair.move(motor_pair.PAIR_1, 0)

    #might change it to play when a certain amount of distance has been travelled or certain amount of rotations has been made               
    if distance_sensor.distance(port.A) < 150: # detect when the distance is less than 15 cm
        detection_count += 1
        if detection_count > 5: #to detect when to play squeak upon retrieving duck
            sound.play('Squeaky Toy', 80, 50)
            detection_count = 0 # resets the detection_count

runloop.run(main())
